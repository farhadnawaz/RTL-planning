<?xml version="1.0"?>
<launch>

  <!-- Gazebo & GUI Configuration -->
  <arg name="gazebo"      default="true"  doc="Should the gazebo simulation be launched? Use false in case if you want to include this file and launch gazebo yourself" />
  <arg name="headless"    default="false" doc="Should the gazebo GUI be launched?" />
  <arg name="paused"      default="false" doc="Should the simulation directly be stopped at 0s?" />
  <arg name="world"       default="worlds/empty.world" doc="Filename to a SDF World for gazebo to use" />
  <arg name="rviz"        default="true" doc="Should RVIz be launched?" />

  <!-- Robot Customization -->
  <arg name="arm_id"      default="panda" doc="Name of the panda robot to spawn" />
  <arg name="use_gripper" default="true"  doc="Should a franka hand be mounted on the flange?" />
  <arg name="controller"  default="passiveDS_impedance"   doc="Which controller should be started? (One of {cartesian_pose, cartesian_twist, passiveDS}_impedance_controller )" />
  <arg name="x"           default="0"     doc="How far forward to place the base of the robot in [m]?" />
  <arg name="y"           default="0"     doc="How far leftwards to place the base of the robot in [m]?" />
  <arg name="z"           default="0"     doc="How far upwards to place the base of the robot in [m]?" />
  <arg name="roll"        default="0"     doc="How much to rotate the base of the robot around its X-axis in [rad]?" />
  <arg name="pitch"       default="0"     doc="How much to rotate the base of the robot around its Y-axis in [rad]?" />
  <arg name="yaw"         default="0"     doc="How much to rotate the base of the robot around its Z-axis in [rad]?" />
  <arg name="xacro_args"  default=""      doc="Additional arguments to pass to panda_arm.urdf.xacro" />
  <!-- Old initial position 
  <arg name="initial_joint_positions"
       doc="Initial joint configuration of the panda. Specify as a list of name/value pairs in form of '-J [name-of-joint] [value-in-rad]'. Default is a 90 degree bend in the elbow"
       default="-J $(arg arm_id)_joint1 0
                -J $(arg arm_id)_joint2 -0.1516284550464292
                -J $(arg arm_id)_joint3 0
                -J $(arg arm_id)_joint4 -2.1602991589328693
                -J $(arg arm_id)_joint5 0.0063609233109487425
                -J $(arg arm_id)_joint6 2.030401506252017
                -J $(arg arm_id)_joint7 0.8428664707532099
                -J $(arg arm_id)_finger_joint1 0.01
                -J $(arg arm_id)_finger_joint2 0.01"
       /> -->
      <!-- Wiping loop task initial position
         <arg name="initial_joint_positions"
       doc="Initial joint configuration of the panda. Specify as a list of name/value pairs in form of '-J [name-of-joint] [value-in-rad]'. Default is a 90 degree bend in the elbow"
       default="-J $(arg arm_id)_joint1 -0.525386621340461
                -J $(arg arm_id)_joint2 0.02784335232253543
                -J $(arg arm_id)_joint3 -0.5200941388986049
                -J $(arg arm_id)_joint4 -2.5109892095431965
                -J $(arg arm_id)_joint5 -0.09371250516671026
                -J $(arg arm_id)_joint6 2.4623761379490627
                -J $(arg arm_id)_joint7 -0.1879167329678202
                -J $(arg arm_id)_finger_joint1 0.01
                -J $(arg arm_id)_finger_joint2 0.01"
       /> -->

       <!-- 0.26022123674947434, 0.5801258654180693, 0.8688438625732139, -1.5921741057570435, -1.649899364912075, 0.7971383000511022, -0.9149869504540067 -->
       <!-- -0.01033557326829788, 0.5301617933735968, 1.0782360436145082, -1.825077632686992, -1.8882466716199058, 1.195274311333626, -1.316415289446186 -->
       <!-- -0.08113905029519364, 0.39278349222760955, 1.1321694312572945, -1.845642786791165, -1.5025271745417401, 0.7729357209154409, -0.23358173116477915 -->
      <!-- scooping_shifted_towards_base task initial position
         <arg name="initial_joint_positions"
       doc="Initial joint configuration of the panda. Specify as a list of name/value pairs in form of '-J [name-of-joint] [value-in-rad]'. Default is a 90 degree bend in the elbow"
       default="-J $(arg arm_id)_joint1 -0.07576063
                -J $(arg arm_id)_joint2 0.28673074
                -J $(arg arm_id)_joint3  0.40856117
                -J $(arg arm_id)_joint4 -1.6903281
                -J $(arg arm_id)_joint5 -0.10705662
                -J $(arg arm_id)_joint6 1.917994
                -J $(arg arm_id)_joint7 1.2273186
                -J $(arg arm_id)_finger_joint1 0.01
                -J $(arg arm_id)_finger_joint2 0.01"
       /> -->
       <!-- only_orient: -0.2832044799975616, 0.1739942235443237, 0.28817772404137776, -2.109711944154801, -0.13936924614391852, 2.2595384073536904, 0.8575429409783784 -->
       <!-- position_orient_simple: -0.2589582177589105, 0.20285621924191288, 0.3132495977650782, -2.062019412495039, -0.13205876786520684, 2.2443593614648503, 0.9008013757116773 -->
      <!-- position_orient_complex: -0.021345755878028783, 0.4607989188697833, -0.5072404087352609, -1.8738605455097717, 0.2540194923038597, 2.3638514670784767, 0.08459832701713599-->
      <!-- position_orient_complex_1: -0.49932919814335, 0.4978323025350162, 0.06717963169483618, -1.7982561175468137, -0.1826335700867617, 2.329791380983002, 0.3873505376029893-->
       <!-- Mixing pan task initial position
         <arg name="initial_joint_positions"
       doc="Initial joint configuration of the panda. Specify as a list of name/value pairs in form of '-J [name-of-joint] [value-in-rad]'. Default is a 90 degree bend in the elbow"
       default="-J $(arg arm_id)_joint1 -0.5692846844893706
                -J $(arg arm_id)_joint2 0.10196715595112238
                -J $(arg arm_id)_joint3 -0.41614693432817607
                -J $(arg arm_id)_joint4 -2.1405303046380455
                -J $(arg arm_id)_joint5 1.3735983536857406
                -J $(arg arm_id)_joint6  1.27052770800928
                -J $(arg arm_id)_joint7 1.6958714801464545
                -J $(arg arm_id)_finger_joint1 0.01
                -J $(arg arm_id)_finger_joint2 0.01"
       /> -->
       <!-- Wiping left task initial position -->
         <arg name="initial_joint_positions"
       doc="Initial joint configuration of the panda. Specify as a list of name/value pairs in form of '-J [name-of-joint] [value-in-rad]'. Default is a 90 degree bend in the elbow"
       default="-J $(arg arm_id)_joint1 -0.5763334127407198
                -J $(arg arm_id)_joint2 0.5636065191842144
                -J $(arg arm_id)_joint3 -0.46555814832018094
                -J $(arg arm_id)_joint4 -2.092635621493035
                -J $(arg arm_id)_joint5 0.23355534190415345
                -J $(arg arm_id)_joint6  2.5352809564348684
                -J $(arg arm_id)_joint7 -0.4194959070588641
                -J $(arg arm_id)_finger_joint1 0.01
                -J $(arg arm_id)_finger_joint2 0.01"
       />                                                                                                                                 
  <include file="$(find gazebo_ros)/launch/empty_world.launch" if="$(arg gazebo)">
    <arg name="world_name" value="$(arg world)"/>
    <!-- Always start in paused mode, and only unpause when spawning the model -->
    <arg name="paused" value="true"/>
    <arg name="gui" value="$(eval not arg('headless'))"/>
    <arg name="use_sim_time" value="true"/>
  </include>

  <param name="robot_description"
         command="$(find xacro)/xacro $(find franka_description)/robots/fr3/fr3.urdf.xacro
                  gazebo:=true
                  hand:=$(arg use_gripper)
                  arm_id:=$(arg arm_id)
                  xyz:='$(arg x) $(arg y) $(arg z)'
                  rpy:='$(arg roll) $(arg pitch) $(arg yaw)'
                  $(arg xacro_args)">
  </param>

  <rosparam file="$(find franka_gazebo)/config/franka_hw_sim.yaml" subst_value="true" />
  <rosparam file="$(find franka_interactive_controllers)/config/franka_interactive_sim_controllers.yaml" subst_value="true" />
  <!-- <rosparam file="$(find franka_gazebo)/config/sim_controllers.yaml" subst_value="true" /> -->

  <param name="m_ee" value="0.76" if="$(arg use_gripper)" />

  <arg name="unpause" value="$(eval '' if arg('paused') else '-unpause')" />
  <node name="$(arg arm_id)_model_spawner"
        pkg="gazebo_ros"
        type="spawn_model"
        args="-param robot_description -urdf -model $(arg arm_id) $(arg unpause)
              $(arg initial_joint_positions)
              "/>

  <!-- Spawn required ROS controllers -->
  <node pkg="controller_manager"
        type="spawner"
        name="$(arg arm_id)_gripper_spawner"
        if="$(arg use_gripper)"
        args="franka_gripper"
        respawn="false"
  />

  <!-- spawns the controller after the robot was put into its initial joint pose -->
  <node pkg="controller_manager"
        type="spawner"
        name="$(arg arm_id)_controller_spawner"
        respawn="false" output="screen"
        args="--wait-for initialized franka_state_controller"
  />
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
  <node name="joint_state_publisher" type="joint_state_publisher" pkg="joint_state_publisher">
    <rosparam param="source_list">[franka_state_controller/joint_states, franka_gripper/joint_states] </rosparam>
    <param name="rate" value="30"/>
  </node>

  <!-- Bring up rqt_reconfigure to modify values -->
  <node name="rqt_reconfigure" pkg="rqt_reconfigure" type="rqt_reconfigure" required="false" />


  <!-- Convert franka state of EE to Geometry Message PoseStamped!! -->  
  <node name="franka_to_geometry_messages" pkg="franka_interactive_controllers" type="franka_to_geometry_messages.py" respawn="false" output="screen"/>
  
  
    <!-- Command desired velocity
  <node name="desired_vel" pkg="franka_interactive_controllers" type="desired_vel.py" respawn="false" output="screen"/>
  -->

  <!-- Bring up gripper GUI to control gripper from code -->  
  <node name="franka_gui_gripper_run" pkg="franka_interactive_controllers" type="franka_gui_gripper_run.py" respawn="false" output="screen"/>

  <!-- Bring up rviz configuration -->
  <node  pkg="rviz" type="rviz" output="screen" name="rviz" args="-d $(find franka_interactive_controllers)/launch/rviz/franka_description.rviz" if="$(arg rviz)"/>

  <!-- Start only if cartesian_pose_impedance_controller is set in "controller"-->
  <include file="$(find franka_interactive_controllers)/launch/cartesian_pose_impedance_controller.launch" 
    if="$(eval arg('controller') == 'cartesian_pose_impedance')">
  </include>


  <!-- Start only if cartesian_twist_impedance_controller is set in "controller"-->
  <include file="$(find franka_interactive_controllers)/launch/cartesian_twist_impedance_controller.launch" if="$(eval arg('controller') == 'cartesian_twist_impedance')">
  </include>

  <!-- Start only if passive_ds_impedance_controller is set in "controller"-->
  <include file="$(find franka_interactive_controllers)/launch/passiveDS_impedance_controller.launch" if="$(eval arg('controller') == 'passiveDS_impedance')">
  </include>

</launch>
